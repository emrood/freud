<?php

namespace DummyNamespace;

use DummyRootNamespaceHttp\Requests;
use DummyRootNamespaceHttp\Controllers\Controller;
use Illuminate\Support\Facades\Gate;
use Yajra\DataTables\Facades\DataTables;
use DummyRootNamespace{{modelNamespace}}{{modelName}};
use Illuminate\Http\Request;

class DummyClass extends Controller
{
    /**
     * Display a listing of the resource.
     *
     * @return \Illuminate\View\View
     */
    public function index(Request $request)
    {
        if (!Gate::allows('view-{{crudName}}')) {
                return abort(401);
        }

        ${{crudName}} = new {{modelName}}();
        $columns = ${{crudName}}->getColumns();

        return view('{{viewPath}}{{viewName}}.index', compact('columns'));
    }


     public function getData(Request $request)
        {
             ${{crudName}} = {{modelName}}::get();
            return DataTables::of(${{crudName}})
                ->addIndexColumn()
                ->addColumn('actions', function ($q) use ($request) {
                    $view = "";
                    $show = view('backend.datatable.action-view')
                        ->with(['route' => asset('{{crudName}}/'.$q->id),'label' => '{{crudName}}'])
                        ->render();
                    $view .= $show;
                    $edit = view('backend.datatable.action-edit')
                        ->with(['route' => asset('{{crudName}}/'.$q->id.'/edit'), 'label' => '{{crudName}}'])
                        ->render();
                    $view .= $edit;

                    $delete = view('backend.datatable.action-delete')
                        ->with(['route' => asset('{{crudName}}/'.$q->id),'label' => ' {{crudName}}'])
                        ->render();
                    $view .= $delete;

                    return $view;

                })
                ->rawColumns(['actions'])
                ->make();
        }



    /**
     * Show the form for creating a new resource.
     *
     * @return \Illuminate\View\View
     */
    public function create()
    {
        if (!Gate::allows('add-{{crudName}}')) {
                    return abort(401);
        }
        return view('{{viewPath}}{{viewName}}.create');
    }

    /**
     * Store a newly created resource in storage.
     *
     * @param \Illuminate\Http\Request $request
     *
     * @return \Illuminate\Http\RedirectResponse|\Illuminate\Routing\Redirector
     */
    public function store(Request $request)
    {
         if (!Gate::allows('add-{{crudName}}')) {
             return abort(401);
         }

        {{validationRules}}
        $requestData = $request->all();
        {{fileSnippet}}
        {{modelName}}::create($requestData);

        return redirect('{{routeGroup}}{{viewName}}')->with('message', '{{modelName}} added!');
    }

    /**
     * Display the specified resource.
     *
     * @param  int  $id
     *
     * @return \Illuminate\View\View
     */
    public function show($id)
    {
        if (!Gate::allows('view-{{crudName}}')) {
             return abort(401);
        }

        ${{crudNameSingular}} = {{modelName}}::findOrFail($id);

        return view('{{viewPath}}{{viewName}}.show', compact('{{crudNameSingular}}'));
    }

    /**
     * Show the form for editing the specified resource.
     *
     * @param  int  $id
     *
     * @return \Illuminate\View\View
     */
    public function edit($id)
    {
        if (!Gate::allows('edit-{{crudName}}')) {
                 return abort(401);
        }
        ${{crudNameSingular}} = {{modelName}}::findOrFail($id);

        return view('{{viewPath}}{{viewName}}.edit', compact('{{crudNameSingular}}'));
    }

    /**
     * Update the specified resource in storage.
     *
     * @param \Illuminate\Http\Request $request
     * @param  int  $id
     *
     * @return \Illuminate\Http\RedirectResponse|\Illuminate\Routing\Redirector
     */
    public function update(Request $request, $id)
    {
       if (!Gate::allows('edit-{{crudName}}')) {
           return abort(401);
       }

        {{validationRules}}
        $requestData = $request->all();
        {{fileSnippet}}
        ${{crudNameSingular}} = {{modelName}}::findOrFail($id);
        ${{crudNameSingular}}->update($requestData);

        return redirect('{{routeGroup}}{{viewName}}')->with('message', '{{modelName}} updated!');
    }

    /**
     * Remove the specified resource from storage.
     *
     * @param  int  $id
     *
     * @return \Illuminate\Http\RedirectResponse|\Illuminate\Routing\Redirector
     */
    public function destroy($id)
    {
        if (!Gate::allows('delete-{{crudName}}')) {
           return abort(401);
        }

        {{modelName}}::destroy($id);

        return redirect('{{routeGroup}}{{viewName}}')->with('message', '{{modelName}} deleted!');
    }
}
